# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Set up Gradle cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build -Dquarkus.package.type=fast-jar

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: coverageReports
        path: "*/build/reports/jacoco/test/jacocoTestReport.xml"
        if-no-files-found: error
        retention-days: 1

    - name: Upload Docker Build Resources For API
      uses: actions/upload-artifact@v2
      with:
        name: apiDockerBuildResources
        path: |
          poc-dktedit-api/build/quarkus-app
          poc-dktedit-api/src/main/docker/Dockerfile.fast-jar
        if-no-files-found: error
        retention-days: 1

  docker-api:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download Coverage Report
      uses: actions/download-artifact@v2
      with:
        name: apiDockerBuildResources
    - name: Build docker images and publish
      run: |
        ls -lR
        echo "Need organisation docker hub infos (https://github.com/marketplace/actions/build-and-push-docker-images)"

  deploy:
    needs: [docker-api]
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to env
      run: echo "Need organisation environment and kubernetes (multiple non Github action available)"

  sonar:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Download Coverage Report
      uses: actions/download-artifact@v2
      with:
        name: coverageReports

    - name: Check coverage reports
      run: ls -l */build/reports/jacoco/test/jacocoTestReport.xml

#    - name: SonarCloud Scan
#      uses: sonarsource/sonarcloud-github-action@v1.4
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      with:
#        args: >
#          -Dsonar.organization=my-organization
#          -Dsonar.projectKey=my-projectkey
#          -Dsonar.coverage.jacoco.xmlReportPaths="*/build/reports/jacoco/test/jacocoTestReport.xml"
#          -Dsonar.sources=....list sources via gradle
#          -Dsonar.tests=tests/
#          -Dsonar.verbose=true
